<!doctype html public "-//W3C//DTD HTML 3.2//EN">
<html><head><title>Microsoft Transaction Server Release Notes</title>

<script language="JavaScript">
	TempString = navigator.appVersion
	if (navigator.appName == "Microsoft Internet Explorer"){	
// Check to see if browser is Microsoft
		if (TempString.indexOf ("4.") >= 0){
// Check to see if it is IE 4
			document.writeln('<link rel="stylesheet" type="text/css" href="/iishelp/common/coua.css">');
		}
		else {
			document.writeln('<link rel="stylesheet" type="text/css" href="/iishelp/common/cocss.css">');
		}
	}
	else if (navigator.appName == "Netscape") {						
// Check to see if browser is Netscape
		document.writeln('<link rel="stylesheet" type="text/css" href="/iishelp/common/coua.css">');
	}
	else
		document.writeln('<link rel="stylesheet" type="text/css" href="/iishelp/common/cocss.css">');
</script> 

<meta name="DESCRIPTION" content="Microsoft Transaction Server Release Notes"></head>

<body bgcolor="#FFFFFF" text="#000000">
<font face="Verdana,Arial,Helvetica">

<h1>Microsoft Transaction Server Release Notes</h1>

<p>This document contains late-breaking information for Microsoft&reg; Transaction Server (MTS).
For further information, see the following topics:<br><br>
<a href="../../../mts/html/settingup.htm">Setting Up Microsoft Transaction Server</a><br>	
<a href="../../../mts/html/gettingstarted.htm">What&#146;s New in MTS 2.0?</a><br>
<a href="../../../mts/html/MTSWelcome.html">MTS Product Documentation</a><br>
</p>

<hr>

<h1><a name="asconlatebreakinginformationandknownlimitations"></a>Late-Breaking Information and Known Limitations</h1>
<p>
The following sections contain late-breaking information that is not covered in the regular documentation, as well as known bugs and limitations.</p>
<h4>Setting System Package Identity</h4>
<p>
When installing MTS, set the System package identity before creating any new packages as follows:
<ol>
<li>
Create a new local Windows NT<font face="Symbol"><span style="font-family:Symbol">&#210;</span></font> group named “MTS Administrators” and a new local user named “MTS Administrator”.<br><br></li>
<li>
Add the “MTS Administrator” user to the “MTS Administrators” and &quot;Administrators&quot; groups.<br><br></li>
<li>
Set the identity of the System package to “MTS Administrator”.<br><br></li>
<li>
Shut down the System package so that it will be restarted with the new identity.</li>
</ol>
<h4>User Rights for MTS Packages</h4>
<p>
Make sure the user account for the identities of the System package and other MTS packages have the Windows NT &quot;Log on as a service&quot; user right. You can verify this by using the Windows NT User Manager:
<ol>
<li>
From the <b>Policies</b> menu, choose <b>User Rights</b>.<br><br></li>
<li>
Click <b>Show Advanced User Rights</b>.</li>
</ol>
<h2>Setting Up MTS to Access Oracle Databases</h2>
<p>
This information entirely replaces earlier documentation that described how to use Oracle with Microsoft Transaction Server, including that in the Microsoft Transaction Server 2.0 online Help documentation.</p>
<p>
You can enable transactional MTS components to access an Oracle 7.3.3 database through ODBC. MTS works with Oracle 7 Workgroup Server for Windows NT, Oracle 7 Enterprise Server for Windows NT, Oracle 7 Enterprise Servers on UNIX, and Oracle Parallel Server on UNIX.</p>
<p>
Your MTS component may access an Oracle 8 database on either Windows NT or Unix provided your Microsoft Transaction Server component uses the Oracle 7.3.3 client software. MTS does not support Oracle 8 client software.</p>
<p>
This section includes the following topics:
<ul>
<li>
Required Software<br><br></li>
<li>
Setting Up Oracle Support<br><br></li>
<li>
Testing Installation and Configuration of MTS Support for Oracle<br><br></li>
<li>
Validating Oracle Installation and Configuration Using the Sample Bank Application<br><br></li>
<li>
Administering Oracle and Microsoft Distributed Transaction Coordinator<br><br></li>
<li>
Known Limitations of MTS Support for Oracle</li>
</ul>
<h3>Required Software</h3>
<p>
The following software is required to access an Oracle database from MTS components.</p>
<table>
<tr valign=top>
<td>
<b>Component</b></td>
<td>
<b>Version</b></td>
</tr>
<tr valign=top>
<td>
</td>
</tr>
<tr valign=top>
<td>
Oracle Database on Windows NT</td>
<td>
7.3.3 (with patch 4 or later)</td>
</tr>
<tr valign=top>
<td>
Oracle Database on UNIX</td>
<td>
7.3.3 (with patches)</td>
</tr>
<tr valign=top>
<td>
Oracle SQL*Net</td>
<td>
2.3.3 (with patch 2.3.3.0.3 or later)</td>
</tr>
<tr valign=top>
<td>
Oracle OCIW32.DLL </td>
<td>
1.0.0.5 or later</td>
</tr>
<tr valign=top>
<td>
Oracle SQLLIB18.DLL</td>
<td>
1.8.3.0.1 or later</td>
</tr>
<tr valign=top>
<td>
Oracle XA73.LIB</td>
<td>
7.3.3.2.0 or later</td>
</tr>
<tr valign=top>
<td>
Microsoft Transaction Server 2.0</td>
<td>
2.0</td>
</tr>
<tr valign=top>
<td>
Microsoft ODBC Driver for Oracle (MSORCL32.DLL)</td>
<td>
02.73.7283.1 or later</td>
</tr>
<tr valign=top>
<td>
ActiveX Data Objects (ADO)</td>
<td>
1.5</td>
</tr>
</table><br>
<p>
<b>Important Note:</b> Earlier versions of the software will not work properly. Please ensure you install these or later versions of the software. Failing to do this is by far the most common source of problems when trying to use Microsoft Transaction Server with Oracle.</p>
<h4>Oracle Database on Windows NT</h4>
<p>
If your Oracle database resides on Windows NT, you may install either the Oracle 7.3.3 Workgroup Server release for Windows NT or the Oracle 7.3.3 Enterprise Server release for Windows NT. The Oracle 7.3.2 and earlier releases of Oracle for Windows NT are not supported and will not work in conjunction with MTS transactions.</p>
<p>
You must install the Oracle 7.3.3 patch release that is listed in the table above. The Oracle 7.3.3 release will not work with MTS unless this patch release is installed.</p>
<p>
You must submit a problem report to the Oracle Customer Support Organization to obtain the Oracle patch release. This patch release was not available from the Oracle public web site at the time this note was written.</p>
<p>
You may install Oracle 8 on Windows NT provided your Microsoft Transaction Server components use Oracle 7.3.3 client software. MTS does not support Oracle 8 client software.</p>
<h4>Oracle Database on UNIX</h4>
<p>
If your Oracle database resides on UNIX, you must install the Oracle 7.3.3 release (or later) for that UNIX platform. In most cases, you will also be required to install an Oracle 7.3.3 patch release for Oracle on UNIX. </p>
<p>
You must check with Oracle Customer Support to determine if an Oracle 7.3.3 patch release is required for your UNIX platform. Explain that you are going to access your Oracle database on UNIX using the new XA transaction support that is now included in the Oracle 7.3.3 release on Windows NT.</p>
<p>
The following patch releases are known to work:</p>
<table>
<tr valign=top>
<td>
<b>Platform</b></td>
<td>
<b>Oracle Patch</b></td>
</tr>
<tr valign=top>
<td>
</td>
</tr>
<tr valign=top>
<td>
HP 9000</td>
<td>
7.3.3.3</td>
</tr>
<tr valign=top>
<td>
IBM AIX</td>
<td>
7.3.3.2</td>
</tr>
<tr valign=top>
<td>
Sun Solaris</td>
<td>
7.3.3.2</td>
</tr>
</table><br>
<p>
You may install Oracle 8 on Unix provided your Microsoft Transaction Server components use Oracle 7.3.3 client software. MTS does not support Oracle 8 client software.</p>
<h4>Oracle Clients on Windows NT or Windows 95</h4>
<p>
If your Microsoft Transaction Server components access an Oracle database on a remote Windows NT or Unix system, ensure that the following Oracle client software is present on your Microsoft Transaction Server system. Ensure that the client software is at the proper version level. The table at the beginning of the Required Software section specifies which versions are needed.</p>
<table>
<tr valign=top>
<td>
<b>Component</b></td>
</tr>
<tr valign=top>
<td>
Oracle SQL*Net</td>
</tr>
<tr valign=top>
<td>
Oracle OCIW32.DLL</td>
</tr>
<tr valign=top>
<td>
Oracle SQLLIB18.DLL</td>
</tr>
<tr valign=top>
<td>
Oracle XA73.LIB</td>
</tr>
</table><br>
<h4>Oracle SQL*Net</h4>
<p>
You must install the specified version of Oracle SQL*Net on your Microsoft Transaction Server system. </p>
<h4>Oracle OCIW32.DLL</h4>
<p>
You must install the specified version of Oracle OCIW32.DLL on your Microsoft Transaction Server system.</p>
<p>
The following version of the Oracle OCIW32.DLL is known to work:</p>
<pre>Version 1, 0, 0, 5
Tuesday, March 18, 1997 2:47:52 PM
Size 18KB. </pre>
<p>
The following version of the Oracle OCIW32.DLL is known to fail:</p>
<pre>Version 7.x
Thursday, February 01, 1996 12:50:06 AM
Size 36 KB</pre>
<p>
We obtained the correct version of this DLL from the Oracle 7.3.3 installation CD from the \WIN32\V7\RSF73 directory.</p>
<h4>Oracle SQLLIB18.DLL</h4>
<p>
You must install the specified version of Oracle SQLLIB18.DLL on your Microsoft Transaction Server system.</p>
<h4>Oracle XA73.LIB</h4>
<p>
You must install the specified version of Oracle XA73.LIB on your Microsoft Transaction Server system.</p>
<h4>Microsoft Transaction Server 2.0</h4>
<p>
You must install Microsoft Transaction Server 2.0 if you wish to access an Oracle database using Microsoft Transaction Server under transaction control. </p>
<h4>Microsoft ODBC Driver<i> </i>for Oracle</h4>
<p>
The Microsoft ODBC Driver 2.0 for Oracle (MSORCL32.DLL) version 02.73.7283.1 or later is required. The Windows NT 4.0 Option Pack program automatically installs this DLL.</p>
<p>
If you wish to access an Oracle database, we strongly suggest that you use the new Oracle 2.0 driver even if you do not require transaction support. This new driver offers better performance than the Oracle 1.0 driver it replaced The Oracle 1.0 driver serialized all activity at the driver level; requests were single-threaded through the driver. The Oracle 2.0 driver serializes all activities at the connection level. This allows different database connections to be used in parallel.</p>
<h4>ActiveX Data Objects (ADO)</h4>
<p>
If your applications use ADO, you must install the ADO version 1.5. Earlier ADO releases will not work with the new ODBC 3.5 Driver Manager. ADO 1.5 is included in the Windows NT 4.0 Option Pack.</p>
<h3>Setting up Oracle Support</h3>
<p>
<b>To set up Oracle support for MTS transactional components</b>
<ol>
<li>
Install the Oracle 7.3.3 release on your Oracle database server system.<p>
If your Oracle database is located on a Windows NT system, install the Oracle 7.3.3 release on Windows NT.</p>
<p>
If your Oracle database is located on a UNIX system, install the Oracle 7.3.3 release on that system.</p>
<p>
Ensure that the correct version of the Oracle OCIW32.DLL is installed as described in the Required Software section.</p>
</li>
<li>
Install the required Oracle 7.3.3 patch release on your Oracle database server system.<p>
If your Oracle database is located on a Windows NT system, install the Oracle 7.3.3 patch release that is listed in the Required Software section.</p>
<p>
If your Oracle database is located on a UNIX system, install the Oracle 7.3.3 patch release that is required for your version of UNIX. </p>
</li>
<li>
Install Oracle 7.3.3 Client software.</li>
<p>
If your Microsoft Transaction Server components access an Oracle database on a remote Windows NT or Unix system, ensure that the correct Oracle client software is present on your Microsoft Transaction Server system.</p>
<p>
Install the specified Oracle patch release on your Microsoft Transaction Server system and ensure that the client software matches the version levels listed in the table in the Required Software section.</p>
<li>
Install Microsoft Transaction Server 2.0<p>
When you install Microsoft Transaction Server 2.0, the following software will be installed.<br><br>
<ul>
<li>
Microsoft Transaction Server 2.0, including the Microsoft OCI Interface<br><br></li>
<li>
Microsoft ODBC 3.5 Driver Manager<br><br></li>
<li>
Microsoft ODBC Driver for Oracle<br><br></li>
<li>
ADO 1.5<br><br></li>
</ul>
</li>
<li>
Delete the DTCXATM.LOG.<p>
If you have never installed the Microsoft Transaction Server 2.0 Beta release, skip this step.</p>
<p>
If you previously installed the Microsoft Transaction Server 2.0 Beta release, use the Windows Explorer to determine if the DTCXATM.LOG file is present on your system. If so, stop the Microsoft DTC service and delete the DTCXATM.LOG file.</p>
<p>
You should only delete the DTCXATM.LOG file once when you first upgrade from the Microsoft Transaction Server 2.0 beta release. You should never delete the DTCXATM.LOG file thereafter, because it may contain vital recovery information.</p>
</li>
<li>
Enable Oracle XA Support<p>
Perform the following steps to enable Oracle XA transaction support:<br><br>
<ol>
<li>
The Oracle system administrator must create views known as V$XATRANS$. To do this, the administrator must run an Oracle-supplied script, named &quot;xaview.sql&quot;. This file can usually be found in C:\ORANT\RDBMS73\ADMIN.<br><br></li>
<li>
The Oracle system administrator must grant SELECT access to the public on these views.<pre>Grant Select on V$XATRANS$ to public.</pre>
</li>
<li>
In the Oracle Instance Manager, click <b>Advanced Mode</b> on the <b>View</b> menu and select <b>Initialization Parameters</b> in the left pane. In the right pane, select <b>Advanced Tuning</b> and increase the &quot;distributed_transactions&quot; parameter to allow more concurrent MTS transactions to update the database at a single time.</li>
</ol>
<p>
Consult your Oracle Server documentation for more information about configuring Oracle XA transaction support.</p>
</li>
<li>
Configure Integrated Security<p>
Oracle databases have integrated security that uses Windows NT authentication to validate database users. This allows a user to log on to Oracle without supplying a separate user account or password. Users can maintain one user account and password for both Windows NT and Oracle.</p>
<p>
If your MTS components always supply a user account and password when connecting to Oracle databases, then you are not using integrated security. This is true whether your applications specify the user account and password directly or indirectly through an ODBC DSN. In either event, you are not using integrated security and can ignore this step.</p>
<p>
If you use integrated security, you must configure MS DTC to run under a user name and password authorized to connect to your Oracle database. This is required because during database recovery, MS DTC opens your Oracle database to report the outcome of in-doubt transactions. See &quot;Changing the User Account Under Which Microsoft Distributed Transaction Coordinator Runs&quot; below. Use the Oracle security administration tools to ensure that the user name you specify is authorized to open your Oracle database.</p>
<p>
For more information on Oracle's integrated Windows NT security facilities, consult your Oracle documentation.</p>
</li>
<li>
Configure Oracle to support more connections<p>
If you want to create more than a few dozen connections to an Oracle database, you must configure the Oracle server to support additional database connections. See “Configuring Oracle to Support a Large Number of Connections” below for more information.</p>
</li>
</ol>
<h3>Testing Installation and Configuration of MTS Support for Oracle</h3>
<p>
After installing and configuring Oracle support, you must validate your Oracle installation using the Oracle test program installed with MTS. The Oracle test program uses Oracle's OCI XA interfaces in much the same way that MTS uses them.</p>
<p>
The Oracle test program determines whether you can connect to an Oracle database using Oracle's XA facility. The Oracle test program uses standard Oracle interfaces and transaction facilities. It makes no use of Microsoft Transaction Server or Microsoft Distributed Transaction Coordinator. Therefore, failure of the test program indicates that your Oracle system is improperly installed or configured. If the Oracle test program fails, reinstall and reconfigure Oracle, or contact the Oracle Support Organization for assistance</p>
<p>
<b>To run the Oracle test program</b>
<ol>
<li>
Verify that you have installed all of the correct versions of the software as described in Required Software.<br><br></li>
<li>
Create an ODBC DSN that refers to your Oracle database. Ensure that your DSN uses the new Microsoft Oracle ODBC 2.0 driver.<br><br></li>
<li>
Ensure that you have enabled Oracle XA support.<p>
Delete all existing Oracle trace files from the machine containing the MTS components that access the Oracle database. The easiest way to do this is to use the Windows Explorer to locate and delete all *.TRC files.</p>
<p>
If the Oracle test program fails, the trace files may help you determine the source of the problem. By deleting all obsolete trace files, you make it easier to find any newly created ones.</p>
</li>
<li>
If you previously installed the Microsoft Transaction Server 2.0 beta release, use the Windows Explorer to determine if the DTCXATM.LOG file is present on your system. If so, stop the Microsoft DTC service and delete the DTCXATM.LOG file.<p>
If you have never installed the Microsoft Transaction Server 2.0 beta release, you can skip this step.</p>
<p>
You should only delete the DTCXATM.LOG file once when you first upgrade from the Microsoft Transaction Server 2.0 beta release. You should never delete the DTCXATM.LOG file thereafter, because it may contain vital recovery information.</p>
</li>
<li>
From the MS-DOS Command prompt run the Oracle test program (TestOracleXaConfig.exe) and supply your Oracle server user ID, password, and service_name. For example:<pre>c:&gt;TestOracleXaConfig.exe  -U&lt;user id&gt; -P&lt;Password&gt;
-S&lt;Service_Name as contained in the TNS file&gt;.</pre>
<p>
If you run the test program with no parameters, the program will display help information that describes the required parameters.</p>
<p>
The test program will display information about each Oracle operation it performs and will indicate whether each operation was successful.</p>
</li>
<li>
If the Oracle test program is able to connect to your Oracle database server without error, then it is very likely that MTS will work with Oracle also. If the Oracle test program reports any errors, follow these steps:<br><br><ul>
<li>
Document the exact error message that the Oracle test program displays.<br><br></li>
<li>
Examine the Oracle trace file produced when running the Oracle test program. The Oracle trace information is located in the *.TRC file. The Oracle trace file contains extended error information that is extremely helpful in diagnosing problems.<br><br></li>
<li>
Contact your Oracle support representative for assistance.</li>
</ul>
</li>
</ol>
<h3>Validating Oracle Installation and Configuration Using the Sample Bank Application</h3>
<p>
After you have validated your Oracle installation and configuration using the Oracle test program, you should use the Sample Bank Application supplied with Microsoft Transaction Server to ensure that Microsoft Transaction Server can access your Oracle database.</p>
<p>
<b>To validate Oracle support using Sample Bank</b>
<ol>
<li>
Ensure that you have verified that your Oracle system is installed and configured correctly using the Oracle test program provided by MTS. If the Oracle test programs reports any error, you must correct that problem before proceeding.<br><br></li>
<li>
On the Oracle database server, create a table named &quot;Account&quot;. The following example demonstrates how to set up the Account table. <p>
Owner&#09;&#09;&#09;&#09;&#09;&#09;<b>scott</b></p>
<p>
Name of Table&#09;&#09;&#09;<b>Account</b></p>
<p>
Column 1 Name&#09;&#09;<b>AccountNo</b>&#09;of type  <b>NUMBER</b></p>
<p>
Column 2 Name&#09;&#09;<b>Balance</b>&#09;&#09;of type  <b>NUMBER</b></p>
</li>
<li>
Populate the table with at least two rows. The following table illustrates how to populate the table.<p>
AccountNo&#09;&#09;Balance</p>
<p>
1&#09;&#09;&#09;&#09;&#09;&#09;1000</p>
<p>
2&#09;&#09;&#09;&#09;&#09;&#09;1000</p>
</li>
<li>
Create a file DSN using the ODBC configuration utility. Name the file DSN &quot;MTSSamples&quot;. Then manually update the DSN file to add the user’s password. The following example demonstrates how to add the user’s password to a file DSN.<p>
[ODBC]</p>
<p>
DRIVER=Microsoft ODBC for Oracle</p>
<p>
UID=scott</p>
<p>
PWD=<i>mypassword</i></p>
<p>
ConnectString=<i>myserver</i></p>
<p>
SERVER=<i>myserver</i></p>
</li>
<li>
Save the file DSN and run the Sample Bank client.</li>
</ol>
<h3>Administering Oracle and Microsoft Distributed Transaction Coordinator</h3>
<h4>DLL Name Changes in Future Releases of Oracle</h4>
<p>
Oracle sometimes changes DLL names when they release new versions of their product. Microsoft Transaction Server relies upon knowing the names of some Oracle DLLs. MTS currently looks for the DLL names provided with the Oracle 7.3.3 release. If Oracle renames these DLLs, you must modify the values of the following registry keys:</p>
<pre>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Transaction Server\Local Computer\My Computer</pre>
<p>
Under this key there are two string-named values.
<ul>
<li>
OracleXaLib&#09;&quot;xa73.dll&quot;<br><br></li>
<li>
OracleSqlLib&#09;&quot;sqllib18.dll&quot;</li>
</ul>
<h4>Changing the User Account under Which Microsoft Distributed Transaction Coordinator Runs</h4>
<p>
If you configure the Microsoft<font face="Symbol"><span style="font-family:Symbol">&#210;</span></font> Distributed Transaction Coordinator (DTC) to run under an account other than the System account, you must specify an account that is a member of the Administrators group. If not, MS DTC may fail to start, and you will see the following message in the Windows NT event log.</p>
<pre>XATM log object failed to set log encryption key</pre>
<p>
You can configure the user ID for MS DTC as follows:
<ol>
<li>
Stop MS DTC.<br><br></li>
<li>
From the <b>Start</b> menu select <b>Settings</b> and then <b>Control Panel</b>.<br><br></li>
<li>
Double-click the <b>Services</b> icon in the control panel.<br><br></li>
<li>
Double click on <b>MS DTC</b> in the Service list box.<br><br></li>
<li>
Select <b>Log On As</b> and specify a user name and password.<br><br></li>
<li>
Restart MS DTC.</li>
</ol>
<h4>Configuring Oracle to Support a Large Number of Connections</h4>
<p>
If you want to create more than a few dozen connections to an Oracle database, you must configure the Oracle server to support additional database connections. </p>
<p>
You may experience one or more of the following errors if you fail to do this:
<ul>
<li>
Failures on <b>SQLConnect</b> calls.<br><br></li>
<li>
Failures to enlist on the calling object’s transaction, which may result in any of the following errors in the Oracle trace file:<br><br><ul>
<li>
Too many sessions<br><br></li>
<li>
TNS server failed to locate the server name<br><br></li>
<li>
Too many distributed transactions<br><br></li>
</ul>
</li>
<li>
Timeouts while waiting for database locks. This is likely to occur if the configured number of locks is insufficient for the number of concurrently active transactions.<br><br></li>
<li>
Record collision due to locks held by in-doubt transactions.</li>
</ul>
<p>
If you experience any of these problems, consider increasing the following Oracle server configuration parameters:
<ul>
<li>
sessions<br><br></li>
<li>
distributed_lock_timeout<br><br></li>
<li>
distributed_transactions<br><br></li>
<li>
dml_locks<br><br></li>
<li>
max_transaction_branches<br><br></li>
<li>
open_cursors<br><br></li>
<li>
processes<br><br></li>
<li>
queuesize</li>
</ul>
<p>
<b><u>Sessions</u></b></p>
<p>
The value for <code>sessions</code> should typically be three times the total number of database connections that you expect your applications to make.</p>
<p>
<b><u>Queuesize</u></b></p>
<p>
If the <code>queue size</code> for the Oracle Listener process is inadequate, the Listener sometimes falls behind and rejects database open requests. This happens if the Oracle Listener receives too many connection requests and its queue overflows. A client that encounters this error reportsthe error message ‘ORA-12541: No Listener’ and the client log or trace fileswill show the ECONREFUSED message.</p>
<p>
To correct this problem:
<ol>
<li>
Stop the Oracle listener on the system containing the Oracle database server.<br><br></li>
<li>
Increase the QUEUESIZE parameter in the LISTENER.ORA, TNSNET.ORA, or NAMES.ORA files on the Oracle database server system. Choose the queue size based on the number of simultaneous, or nearly simultaneous, connection requests you anticipate.<p>
We suggest that you select a generous value for <code>QUEUESIZE </code>because the Oracle system typically opens more than one database connection for each transactional database connection that your application opens. As a result, the Oracle listener queue may become full and overflow.</p>
<p>
To accommodate 100 requests, change the LISTENER.ORA file as follows:</p>
<pre>QUEUESIZE = 100</pre>
</li>
<li>
Restart the Oracle listener.</li>
</ol>
<h3>Known Limitations of MTS Support for Oracle</h3>
<h4>ADO 1.5 Release Is Required When Using ODBC 3.5</h4>
<p>
If your applications use ADO, make certain that you install ADO 1.5. Refer to the Required Software section for more information.</p>
<h4>No Oracle Support on Digital Alpha Platform</h4>
<p>
Oracle database connectivity is not supported for Microsoft Transaction Server components running on the Digital Alpha platform. Support for Oracle on the Digital Alpha platform will be added in a future release.</p>
<h4>Oracle OCIW32.DLL Version Problem</h4>
<p>
It is important that the correct version of the OCIW32.DLL is installed on your computer. You should check the version of this DLL any time you reinstall Oracle or Microsoft Transaction Server.</p>
<h4>No Oracle Access from MSCS (Wolfpack) Clusters</h4>
<p>
Microsoft Transaction Server applications that reside on MSCS (Wolfpack) clusters cannot access XA databases, including Oracle databases. This is the result of a limitation in Microsoft Distributed Transaction Coordinator.</p>
<p>
Currently, Microsoft Distributed Transaction Coordinator stores encryption information related to XA recovery in the Windows NT registry. This information cannot currently be replicated between the two nodes in an MSCS cluster. As a result, Microsoft DTC cannot be used with any XA-compliant database in clustered environment. We intend to eliminate this restriction in a future release.</p>
<h4>Security and Communication Between Remote MS DTC Computers</h4>
<p>
If your application performs transactions spanning two or more computers, you must ensure that the MS DTCs on these computers are configured to communicate with each other. MS DTC runs under the identity of the System account by default. The MS DTC on one computer can communicate with the MS DTC on another computer, only if the Guest accounts on both computers are enabled. If you disable the Guest account on either machine or in the Windows NT domain to which they belong, you must configure MS DTC to run under some other user name that can communicate with the remote computer. See &quot;Changing the User Account Under Which Microsoft Distributed Transaction Coordinator Runs&quot; above.</p>
<h4>MS DTC with MSCS Requires QFE</h4>
<p>
Customers who use MS DTC in an MSCS environment should install Windows NT QFE Q116844. This QFE fixes a Remote Procedure Call (RPC) problem that can cause an MS DTC client to hang when attempting to connect to MS DTC on a clustered server. This fix is also part of Windows NT QFE1, available at the Windows NT Option Pack Web download site.</p>
<h4>Remote Server Name Must Specify a Virtual Server on MSCS Servers</h4>
<p>
Clustered servers must set the <b>Remote Server Name</b> property to a virtual server name using the MTS Explorer. This enables remote clients to access MTS components within the cluster, and, in the event of failure, ensures that clients are referencing the cluster, not a specific node within that cluster.</p>
<h4>MTS Package Identities Must Be in Administrator Group on MSCS Clusters</h4>
<p>
For MTS packages on MSCS clusters, the user account associated with the package identity must be a system administrator or must have Full Control cluster access permissions (as set in cluadmin). If you do not run the package under the identity of a system administrator, MTS will be unable to connect to MS DTC.</p>
<h4>MTS on MSCS Clusters Requires Same Windows NT Directory Path on All Nodes</h4>
<p>
MTS requires that both the Windows NT directory have the same path on all nodes within an MSCS cluster (for example, c:\winnt).</p>
<h4>Shut Down MSCS Cluster Resources Before Installing MTS</h4>
<p>
You must shut down all MSCS cluster resources (such as SQL Server) that are affected by MTS setup prior to running the MTS setup program.</p>
<h4>Installing SQL Server 6.5 After Installing MTS</h4>
<p>
You can install SQL Server 6.5 after installing MTS. It is recommended that you install SQL Server 6.5 before installing MTS. If you install SQL Server 6.5 after installing MTS, MTS Setup will attempt to ensure that MS DTC works properly.</p>
<h4>Run the INSTCAT.SQL Script</h4>
<p>
As a convenience, MTS includes the INSTCAT.SQL script. This script updates the catalog stored procedures for the SQL Server ODBC driver. If you have not done so already, run this script using the SQL Server <b>isql</b> utility.</p>
<h4>Documentation Errata on Security</h4>
<p>
Security authorization is not enabled by default.</p>
<p>
You cannot set a package's identity to a group.</p>
<p>
When setting package identity, MTS validates the password that you enter. However, if you change the password for the account without updating the password in the MTS Explorer, the package cannot run.</p>
<h4>MS DTC Log File Can Be Compressed</h4>
<p>
The MS DTC log file can now be located in a compressed directory. However, for optimum performance, do not compress the Microsoft DTC log file or store it in a compressed directory. MS DTC must decompress the log file before it can be used.</p>
<h4>Problems Resetting the MS DTC Log File on Windows 95</h4>
<p>
When resetting the MS DTC log file on Windows 95, you may see a dialog box labeled &quot;MTxOCI&quot; followed by a second dialog box labeled &quot;&quot;Failed to create the MS DTC log file.&quot; If this occurs, you must disable automatic startup of MS DTC as described in &quot;Monitoring MTS Transactions on Windows 95.&quot; Restart your computer and reset the log file. You can then re-enable automatic startup of MS DTC.</p>
<p>
Other problems resetting the MS DTC log file can be fixed by closing the MTS Explorer, restarting MTS Explorer, and attempting the reset again. In some instances, this may take several tries before succeeding.</p>
<h4>Monitoring MTS Transactions on Windows 95</h4>
<p>
The documentation for starting and stopping MS DTC on Microsoft<font face="Symbol"><span style="font-family:Symbol">&#210;</span></font> Windows<font face="Symbol"><span style="font-family:Symbol">&#210;</span></font> 95 should read as follows:</p>
<p>
By default, the Microsoft Distributed Transaction Coordinator (MS DTC) is configured to start automatically when a Windows NT or Windows 95 system starts. To prevent MS DTC from automatically starting after rebooting a Windows 95 computer, use the registry editor to find the <b>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\RunServices</b> registry key and then delete the value entry named <b>MSDTC</b>. If you want to enable automatic startup of MS DTC again, use the registry editor to create a value entry named <b>MSDTC </b>with the string value &quot;<code>msdtcw -start&quot;</code> under the <b>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\RunServices </b>registry key.</p>
<p>
Note that the name of the service is &quot;<code>msdtcw&quot;</code>, not &quot;<code>msdtc&quot;</code>, and that there is a space before the hyphen.</p>
<h4>No Remote Administration of MTS 2.0 Computers from MTS 1.<i>x</i> Computers</h4>
<p>
You cannot remotely administer an MTS 2.0 installation from a computer running a previous version of MTS. Attempting to do so will return an error code or cause the MTS Explorer to terminate unexpectedly.</p>
<h4>No Individual Package Shutdown when Remotely Administering an MTS 1.<i>x</i> Computer</h4>
<p>
Individual package shutdown is not supported when remotely administering an MTS 1.<i>x</i> computer.</p>
<h4>Visual Basic 5.0 Shutdown with MTS 2.0</h4>
<p>
After installing MTS 2.0, you may see an Access Violation when shutting down Microsoft<font face="Symbol"><span style="font-family:Symbol">&#210;</span></font> Visual Basic<font face="Symbol"><span style="font-family:Symbol">&#210;</span></font> 5.0. This is a known Visual Basic 5.0 bug that can be fixed by installing Visual Studio<font face="Symbol"><span style="font-family:Symbol">&#212;</span></font> Service Pack 2 from http://www.microsoft.com/vstudio. Refer to Knowledge Base article Q167213 for more information about this problem.</p>
<h4>Multiple Server Processes on Windows 95</h4>
<p>
There is a known problem that occurs when, if an MTS server process terminates unexpectedly (because of a failfast, an assert, or an access violation), subsequent attempts to restart the application create multiple MTS processes. (The correct behavior should be only one MTS process per package.) In case of unexpected server process termination, you must reboot your Windows 95 computer.</p>
<h4>Deadlocks on Windows 95 When Using Named Pipes</h4>
<p>
There is a known problem that may cause deadlocks when using more than approximately 40 Named Pipe connections from a Windows 95 client to MS Distributed Transaction Coordinator (DTC). To fix this problem, change the protocol between the ODBC driver and SQL Server to TCP/IP.</p>
<h4>Components and TreatAs and AutoTreatAs Registry Keys</h4>
<p>
COM allows one server to emulate another using the <b>TreatAs</b> or <b>AutoTreatAs</b> registry keys. Suppose a client creates a component of a given CLSID using <b>CoCreateInstance</b>. If the <b>TreatAs</b> or <b>AutoTreatAs</b> key is present under that CLSID in the registry, COM will instead create the component indicated by this key. This effectively routes client requests to the emulating server. (The same routing is possible using the ProgID if the client refers to its servers by ProgID instead of CLSID.)</p>
<p>
Components being emulated using <b>TreatAs</b> or <b>AutoTreatAs</b> are not valid MTS components and cannot be imported. If the emulation is to be added after the component is imported, the component must be deleted from the MTS catalog, then replaced with the emulating component.</p>
<h4>Mixed Threading Models in a Server Process</h4>
<p>
Within a server process, objects in the same activity must be registered with compatible threading models. The following combinations are valid:
<ul>
<li>
Any combination of apartment, both, or free<br><br></li>
<li>
Single-threaded only</li>
</ul>
<p>
Note that this means that single-threaded MTS components cannot be created by an Active Server Page running in-process with IIS or in-process with an IIS application using process isolation.</p>
<h4>Do Not Create Non-MTS Local Servers Using CreateInstance</h4>
<p>
Creating non-MTS local servers using the context object's <b>CreateInstance</b> method is strongly discouraged. Such servers will not scale well and may result in additional server instances that are not shut down by MTS. If you need to create a non-MTS local server, use <b>CoCreateInstance</b>.</p>
<p>
Do not use COM surrogates within MTS. Instead, load in-process servers into MTS server processes.</p>
<h4>MTS Security Does Not Work With IIS Impersonation</h4>
<p>
MTS role-based package access control does not work properly when packages are front-ended by mutliplexers that impersonate multiple clients (for example, Internet Information Server). MTS packages used in these environments should be configured with security disabled.</p>
<p>
This can be fixed by installing Windows NT QFE1, available at the Windows NT Option Pack Web download site. After installing this QFE, role-based security will work properly with IIS.</p>
<p>
When you create secure IIS applications that use process isolation, IIS creates an MTS package that is set to run as IWAM_&lt;<i>computer name</i>&gt;. If you wish to change the identity of these packages, you should also add the new package identity to the &quot;MTS Trusted Impersonators&quot; group or security will not work properly in other out-of-process MTS components called by your package. If this is not done, the caller will appear to be IWAM_&lt;<i>computer name</i>&gt; rather than the actual client of IIS.</p>
<h4>Using ErrorInfo with ADO</h4>
<p>
ADO erases any information that you might have put in the ErrorInfo object. There is a code work-around for this problem that needs to be implemented in your error handler.</p>
<p>
For Visual Basic, the code is similar to the following:</p>
<pre>ErrorHandler:
    ' cleanup
    If Not adoRS Is Nothing Then
        Set adoRS = Nothing
    End If
    If Not adoConn Is Nothing Then
        Set adoConn = Nothing
    End If
    
    Err.Raise Err.Number, &quot;Bank.Accout.Post&quot;, Err.Description

Exit Function</pre>
<p>
For Visual C++, the code is similar to the following:</p>
<pre>//
// ErrorInfo is saved here because the following 
// ADO cleanup code may clear it.
//
IErrorInfo * pErrorInfo = NULL;
GetErrorInfo(NULL, &amp;pErrorInfo);

if (adoRsBalance) adoRsBalance-&gt;Release();
if (adoCoConnection) adoCoConnection-&gt;Release();

AtlReportError( CLSID_CAccount, pErrMsg, IID_IAccount, hr);

//
// put the error back in TLS
//
SetErrorInfo(NULL, pErrorInfo);</pre>
<p>
For Visual J++, the code is similar to the following:</p>
<pre>if (adoRsBalance != null) {
&#09;if (adoRsBalance.getState() == ObjectStateEnum.adStateOpen)
&#09;&#09;adoRsBalance.Close();
&#09;ComLib.release (adoRsBalance);
}

if (adoConn != null) {
&#09;if (adoConn.getState() == ObjectStateEnum.adStateOpen)
&#09;&#09;adoConn.Close();
&#09;ComLib.release (adoConn);
}</pre>
<p>
<b>Note</b>   In Java you must explicitly close recordsets and/or connections as well as explicitly release the ADO objects.</p>
<h4>No Sample Bank ASP Client</h4>
<p>
The documentation incorrectly states that an Active Server Page (ASP) version of the Sample Bank client is provided.</p>
<h4>Maximum Number of Methods on MTS 2.0 Components Is 1024</h4>
<p>
MTS 1.0 had a limit of 100 methods per component. In MTS 2.0 this limit is now 1024 methods.</p>
<h4>Components Using RDO 2.0 on Multiprocessor Computers May Experience Access Violations</h4>
<p>
Components that use RDO 2.0 and are accessed concurrently by multiple clients may experience access violations. This has been observed on servers that have multiple processors. This problem has not been observed for components that use ADO.</p>
<h4>Location of Visual Basic Script Samples</h4>
<p>
The Visual Basic Scripting (VBScript) samples for automating MTS administration are located in \Program Files\Mts\Samples, not \Program Files\Mtx\Samples\WSH as stated in the documentation.</p>
<h4>Java Sample Bank Does Not Compile on Windows 95</h4>
<p>
To compile the Java Sample Bank components on Windows 95, run midl.exe on the Account.idl file, then run SetJavaDev.bat.</p>
<h2>Using the Microsoft Transaction Server API to Develop Applications</h2>
<h3>Developing Components with Microsoft Visual C++</h3>
<h4>MFC Extension DLLs</h4>
<p>
MTS components should not be built as MFC Extension DLLs because such DLLs can be loaded only by MFC applications. A COM component, and therefore an MTS component, should be built so that it can be loaded into any process, regardless of the type of application that started the process.</p>
<p>
For more information on MFC Extension DLLs, see the Microsoft Visual C++ Programmer’s Guide.</p>
<h3>Developing Components with Microsoft Visual Basic</h3>
<h4>ObjectControl</h4>
<ul>
<li>
The <b>ObjectControl</b> interface is the Automation counterpart of the C++ <b>IObjectControl</b> interface. The <b>ObjectControl</b> interface is not supported unless you have installed Microsoft Windows NT 4.0 Service Pack version 2 or later.<br><br></li>
<li>
The current Microsoft Transaction Server run-time implementation will call the <b>CanBePooled </b>method of a Transaction Server object, as specified in the Transaction Server online documentation. However, the return value is currently ignored. Returning TRUE does not stop Transaction Server from releasing your object. </li>
</ul>
<h4>Known Problem with Mtx.exe Shutdown When Using Visual Basic 4.0 Components</h4>
<p>
When an Mtx.exe process running Visual Basic 4.0 components is &quot;Shutdown because idle for <i>x</i> minutes&quot;, there is a known problem that results in a Read Access Violation. Currently there is no known solution to this problem. It is thought that if more than two Visual Basic 4.0 components are used in a process it is more likely to happen. One workaround is to set your package to &quot;Leave running when idle&quot;. This is only a problem when using components built with Visual Basic 4.0 -- no such problem exists with Visual Basic 5.0.</p>
<h4>Avoiding Visual Basic 4.0/RDO Deadlocks</h4>
<p>
If your server component uses RDO, never let an <b>rdoConnection</b> with an active <b>rdoResultset</b> fall out of scope or a deadlock may result. You must manually close the <b>rdoResultset</b> or <b>rdoConnection</b> to avoid the deadlock. The following sequence produces a deadlock:
<ol>
<li>
Create an instance of the server component. Call a method which creates <b>rdoConnection</b> and then <b>rdoResultset</b>. You may fetch from, but do not exhaust or close the <b>rdoResultset</b>.<br><br></li>
<li>
Release this instance. (As this connection and resultset go out of scope, the ODBC calls required are not immediately made. Instead, a message is posted to a hidden window to do the <b>SQLFreeStmt+SQLDisconnect+SQLFreeConnect</b>).<br><br></li>
<li>
Create a second instance of the server component. Create an <b>rdoConnection</b> and attempt to update a row which was included in the resultset from Step 1 above. This is now a deadlock because the locks held for the resultset created in Step 1 have not been released. And the message pump which will process the message posted in Step 2 above will now never have a chance to run.</li>
</ol>
<p>
The deadlock is avoided by manually closing the resultset (or connection) at the end of Step 1, which immediately makes the ODBC calls to close the statement (and connection). The root of the problem is the delay introduced by the message posted to the hidden window to do the ODBC closes.</p>
<h4>Maintaining the MTS Catalog when Developing Components with Visual Basic</h4>
<p>
Whenever you recompile an OLE DLL project in Visual Basic 4.0, Visual Basic rewrites all of the registry entries for all of the components (Visual Basic classes) that live in that DLL. Additionally, Visual Basic may generate new GUIDs (depending on your project configuration) to identify the components in that DLL. This means that your MTS components are no longer properly registered in the MTS catalog.</p>
<p>
There are two solutions to this problem. First, there is a <b>Refresh</b> button in the Transaction Server Explorer, as well as the <b>Refresh All Components </b>command on the <b>Tools</b> menu. If you use this command Microsoft Transaction Server will repair all inconsistencies in registry entries of components currently in the right pane of the Explorer. </p>
<p>
If you install the development version of Microsoft Transaction Server, check the <b>VB Addin</b> option to enable a feature that will automatically refresh your components after recompiling them. The next time you run Visual Basic 4.0, the add-in will be automatically installed in your Visual Basic IDE. You can also turn the feature on and off on a per-project basis by selecting or deselecting the <b>MTxServer RegRefresh | AutoRefresh after compile </b>command on the Visual Basic <b>Add-Ins </b>menu. If you decide you want to refresh all of your Microsoft Transaction Server components at any given time, you can use the <b>MTxServer RegRefresh | Refresh all components</b> <b>now</b> command on the <b>Add-Ins </b>menu. </p>
<p>
<b>Important</b>  The Visual Basic Add-in has been updated to work with both Visual Basic versions 4.0 and 5.0. Once installed, it will automatically refresh the Transaction Server catalog with the changes made during each compile. The add-in menu option to enable and disable the automatic refresh is no longer supported.</p>
<p>
Using the add-in will properly refresh the MTS catalog, even after Visual Basic compilations that generate new component GUIDs. Note also that the <b>Compatible OLE Server</b> setting in the Visual Basic <b>Project Options </b>dialog box can be used to stop Visual Basic from generating new component GUIDs. </p>
<p>
Refreshing the MTS catalog depends on you not changing the ProgIDs of your components. In Visual Basic 4.0, a component’s ProgID is formed by the following concatenation: <i>project name</i>.<i>class name</i>. If you change either of these items, you will have to reinstall your component(s) in the MTS Explorer.</p>
<p>
Building your component in Visual Basic 4.0 without selecting the  <b>Compatible OLE Server</b> option<b> </b>replaces your old CLSID and IID on each compile. This has disadvantages when developing an MTS component, even with the Visual Basic add-in enabled.
<ul>
<li>
Roles you assigned to the interface using the MTS Explorer are lost, since the interface IID is obsolete.<br><br></li>
<li>
Proxies and registry configurations you distributed to remote machines no longer refer to your component and must all be updated.<br><br></li>
<li>
Packages you exported which contain your component require re-exporting since the package definition file GUIDs are now out of sync.</li>
</ul>

<hr>

<h1> Reporting Problems and Bugs</h1>

<p>When reporting a bug, please include the following information in your bug report:</p>

<ul>
<li>The error number and description.</li>
<li>Any relevant Windows NT event log messages. (Microsoft Transaction Server reports errors in the Windows NT event log; Select Log Application and look for messages with Source = Transaction Server. If an error occurs, please check the Windows NT event log).</li>
<li>The configuration for your client computer, if applicable.</li>
<li>The configuration for your server computer.</li>
<li>The component(s) that is causing the problem.</li>
<li>The language that you used to develop your component (Microsoft Visual Basic, Microsoft Visual C++, and so on).</li> 
<li>The type of interfaces your component(s) implements. For example, custom interfaces, dual interface, or dispinterface.</li>
<li>The ODBC version, if applicable.</li>
<li>The name and version of the resource manager.</li>
<li>Any third-party components, resource dispensers, or resource managers that are causing problems.</li>
<li>If possible, the line(s) of code where the problem occurs.</li>
</ul>

<hr>

<h1>Your Guide to Microsoft Technical Support</h1>

<p>If you have a technical question about Microsoft&reg; Transaction Server, use this online documentation or consult Help by clicking the <strong>Help</strong> button during a procedure. If you still have a question, Microsoft offers technical support and services ranging from self-help tools to direct assistance with a Microsoft Technical Support Engineer. Note: The services and prices listed here are available in the United States and Canada only (see <em><strong>Technical Support Worldwide</strong></em> below).</p>

<h2>Self-Help Tools to Find Answers Yourself</h2>

<p><strong>Microsoft Technical Support Online:</strong> This innovative site uses the cutting-edge technology of Microsoft to help you access the most relevant technical information and resources to answer your support questions.  Use the Troubleshooting Wizards to easily diagnose and answer technical questions.  Or select technical articles, programming aids, or commonly asked questions from the Microsoft Knowledge Base of over 75,000 articles.  Visit <a href="http://www.microsoft.com/support/" target="_top">http://www.microsoft.com/support/</a> today and see how easy it is to find the answers you need.</p>

<h2>Direct Assistance with a Microsoft Technical Support Engineer</h2>

<p><strong>Pay-Per-Incident Support:</strong> If you still need answers to your technical questions, you can purchase Pay-Per-Incident Support.  In the U.S. and Canada, for a fee of $195US per incident, please call (800) 936-5900, 24 hours a day, seven days a week, including holidays.</p>

<p><em><strong>Note</strong>&nbsp;&nbsp;&nbsp;Support fees for the (800)# calls will be billed to your VISA, MasterCard, or American Express credit card.</em></p>
  
<p><strong>Priority Annual Support:</strong> If you anticipate a high volume of support incidents, or need priority access to Microsoft Technical Support Engineers, you can purchase a Priority Annual Comprehensive Account.  In the U.S. and Canada, for more information or to purchase an annual account at a cost of $1,695US per 10 incidents, call (800) 936-3500, 24 hours a day, 7 days a week, including holidays.  To submit an incident against an existing account, call (800) 936-4900, 24 hours a day, 7 days a week, including holidays.</p>
  
<p><strong>Submitting questions via the Internet</strong>: In the U.S. and Canada, you can also submit your Pay-Per-Incident or Priority Annual support questions via the Internet with Web Response.  For more details, go to Microsoft Technical Support Online at <a href="http://www.microsoft.com/support/" target="_top">http://www.microsoft.com/support/</a>.</p>

<p><strong>Priority Plus:</strong> Microsoft Technical Support also offers special accounts for medium-sized businesses that require priority incident resolution, including business-critical support and access to targeted information to assist information-technology and Help desk professionals in support planning for smoother product deployment.  For more information, in the U.S. and Canada, please call (800) 936-3500, 24 hours a day, seven days a week, including holidays.</p>

<p><strong>Priority Consult Line:</strong> Receive hourly consulting for support questions that fall outside of the traditional technical support realm. These include designing or planning for deployment, software development, code review, and implementation planning. The Consult Line covers all Microsoft products, including those Microsoft products used for developing Internet and Intranet solutions. For more information or to purchase hourly consulting services at $195US per hour (minimum one hour), please call (800) 936-5200, Monday through Friday, excluding holidays, 6:00 A.M. to 6:00 P.M. Pacific time.</p>
	
 <h2>Additional Support Options</h2>
<p><strong>Professional Programs and Services:</strong> Microsoft Technical Support also offers professional support programs and services for large businesses that require a direct relationship with Microsoft.  For more information, see the Technical Support section of the Help file, or visit Microsoft Technical Support Online at <a href="http://www.microsoft.com/support/" target="_top">http://www.microsoft.com/support/</a>.</p>

<p><strong>Text Telephone:</strong> Microsoft text telephone (TTY/TTD) services are available for the deaf or hard-of-hearing. In the United States, using a TTY/TTD modem, dial (425) 635-4948. In Canada, using a TTY/TTD modem, dial (905) 568-9641.</p>

<p><strong>Technical Support Worldwide:</strong> Support services and prices may vary outside the United States and Canada.  For information on support available outside the U.S. and Canada, contact the local Microsoft subsidiary in your area.  For a list of worldwide Microsoft subsidiaries, see the Technical Support section of the Help file, or visit Microsoft Technical Support Online at <a href="http://www.microsoft.com/support/" target="_top">http://www.microsoft.com/support/</a>.</p>

<p><em><strong>Note</strong>&nbsp;&nbsp;&nbsp;The services and prices listed here are available in the United States and Canada only.  Support services may vary outside the U.S. and Canada.  For more information on support in other locations, contact your local Microsoft subsidiary.</p>
  
<p>Microsoft&#146;s support services are subject to Microsoft&#146;s then-current prices, terms, and conditions, which are subject to change without notice.
</em></p>

<hr>

<h1><a name="CopyrightInformation">Copyright Information</a></h1>

<p>&#169; 1997 Microsoft Corporation</p>

<p>These materials are provided &#147;as-is,&#148; for informational purposes only.</p>

<p>Neither Microsoft nor its suppliers makes any warranty, express or implied with respect to the content of these materials or the accuracy of any information contained herein, including, without limitation, the implied warranties of merchantability or fitness for a particular purpose. Because some states/jurisdictions do not allow exclusions of implied warranties, the above limitation may not apply to you.</p>

<p>Neither Microsoft nor its suppliers shall have any liability for any damages whatsoever including consequential, incidental, direct, indirect, special, and lost profits. Because some states/jurisdictions do not allow exclusions of implied warranties, the above limitation may not apply to you. In any event, Microsoft&#146;s and its suppliers&#146; entire liability in any manner arising out of these materials, whether by tort, contract, or otherwise shall not exceed the suggested retail price of these materials.</p>

<hr class="iis" size="1">
<p align="center"><em><a href="/iishelp/common/colegal.htm">&copy; 1997 by Microsoft Corporation. All rights reserved.</a></em></p>

</font>
</body>
</html>

